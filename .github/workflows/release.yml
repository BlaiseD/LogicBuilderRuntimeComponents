name: Release

on:
  release:
    types: [published]

jobs:
  build:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.101
        source-url: https://nuget.pkg.github.com/blaised/index.json
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - run: echo '::set-env name=VERSION_NUMBER::1.0.1-preview01'
    - run: echo '::set-env name=NUGET_URL::https://api.nuget.org/v3/index.json'
    - run: echo '::set-env name=NUGET_API_KEY::${{ secrets.NUGET_API_KEY }}'

    - name: Build
      run: dotnet build --configuration Release

    - name: Test
      run: dotnet test --no-restore --verbosity normal

    - run: echo '::set-env name=PROJECT_NAME::LogicBuilder.Attributes'
    - run: echo '::set-env name=PROJECT_PATH::.\${{ env.PROJECT_NAME }}\${{ env.PROJECT_NAME }}.csproj'
    - run: echo '::set-env name=NUGET_PACKAGE_PATH::.\artifacts\${{ env.PROJECT_NAME }}.${{ env.VERSION_NUMBER }}.nupkg'
    - run: dotnet pack $Env:PROJECT_PATH -c Release -o .\artifacts --no-build
    - run: dotnet nuget push $Env:NUGET_PACKAGE_PATH --skip-duplicate --source $Env:NUGET_URL --api-key $Env:NUGET_API_KEY

    - run: echo '::set-env name=PROJECT_NAME::LogicBuilder.DataContracts'
    - run: echo '::set-env name=PROJECT_PATH::.\${{ env.PROJECT_NAME }}\${{ env.PROJECT_NAME }}.csproj'
    - run: echo '::set-env name=NUGET_PACKAGE_PATH::.\artifacts\${{ env.PROJECT_NAME }}.${{ env.VERSION_NUMBER }}.nupkg'
    - run: dotnet pack $Env:PROJECT_PATH -c Release -o .\artifacts --no-build
    - run: dotnet nuget push $Env:NUGET_PACKAGE_PATH --skip-duplicate --source $Env:NUGET_URL --api-key $Env:NUGET_API_KEY

    - run: echo '::set-env name=PROJECT_NAME::LogicBuilder.Forms.Parameters'
    - run: echo '::set-env name=PROJECT_PATH::.\${{ env.PROJECT_NAME }}\${{ env.PROJECT_NAME }}.csproj'
    - run: echo '::set-env name=NUGET_PACKAGE_PATH::.\artifacts\${{ env.PROJECT_NAME }}.${{ env.VERSION_NUMBER }}.nupkg'
    - run: dotnet pack $Env:PROJECT_PATH -c Release -o .\artifacts --no-build
    - run: dotnet nuget push $Env:NUGET_PACKAGE_PATH --skip-duplicate --source $Env:NUGET_URL --api-key $Env:NUGET_API_KEY

    - run: echo '::set-env name=PROJECT_NAME::LogicBuilder.RulesDirector'
    - run: echo '::set-env name=PROJECT_PATH::.\${{ env.PROJECT_NAME }}\${{ env.PROJECT_NAME }}.csproj'
    - run: echo '::set-env name=NUGET_PACKAGE_PATH::.\artifacts\${{ env.PROJECT_NAME }}.${{ env.VERSION_NUMBER }}.nupkg'
    - run: dotnet pack $Env:PROJECT_PATH -c Release -o .\artifacts --no-build
    - run: dotnet nuget push $Env:NUGET_PACKAGE_PATH --skip-duplicate --source $Env:NUGET_URL --api-key $Env:NUGET_API_KEY

    - run: echo '::set-env name=PROJECT_NAME::LogicBuilder.RulesDirector.AspNetCore'
    - run: echo '::set-env name=PROJECT_PATH::.\${{ env.PROJECT_NAME }}\${{ env.PROJECT_NAME }}.csproj'
    - run: echo '::set-env name=NUGET_PACKAGE_PATH::.\artifacts\${{ env.PROJECT_NAME }}.${{ env.VERSION_NUMBER }}.nupkg'
    - run: dotnet pack $Env:PROJECT_PATH -c Release -o .\artifacts --no-build
    - run: dotnet nuget push $Env:NUGET_PACKAGE_PATH --skip-duplicate --source $Env:NUGET_URL --api-key $Env:NUGET_API_KEY